#! /usr/bin/env bash

set -euo pipefail

input_json="$(cat)"

# parse out the input params
## required
private_key=$(        echo "${input_json}" | jq    '.source.private_key'     )
build_status=$(       echo "${input_json}" | jq    '.source.build_status'    )

# optional
coralogix_host=$(     echo "${input_json}" | jq -r '.source.coralogix_host? // "api.coralogix.com"'     )
subsystem_name=$(     echo "${input_json}" | jq    '.source.subsystem_name? // ${BUILD_PIPELINE_NAME}'  )
application_name=$(   echo "${input_json}" | jq    '.source.application_name? // "concourse"'           )
computer_name=$(      echo "${input_json}" | jq    '.source.computer_name? // empty'                    )
severity=$(           echo "${input_json}" | jq -r '.source.severity? // 3'                             )

body=$(jq -c \
  --argjson private_key           "$private_key" \
  --argjson application_name      "$application_name" \
  --argjson subsystem_name        "$subsystem_name" \
  --argjson computer_name         "$computer_name" \
  --arg     timestamp             "$(date +%s000)" \
  --argjson severity              "$severity" \
  --arg     build_status          "$build_status" \
  <<EOF
{
  "privateKey": \$private_key,
  "applicationName": \$application_name,
  "subsystemName": \$subsystem_name,
  "computerName": \$computer_name,
  "logEntries":
    [
      ( {
          "timestamp": \$timestamp,
          "duration": \$duration_json,
          "severity": \$severity,
          "build_status": \$build_status,
          "job_name": $BUILD_JOB_NAME
        }
      )
    ]
}
EOF
)

## retry mechanism
## currently hardcoded to 5
for i in $(seq 1 5); do
  http_status_code=$(curl \
    -XPOST \
    --header 'Content-Type: application/json' \
    --data "${body}" \
    --silent \
    --output /dev/null \
    --head \
    --write-out "%{http_code}" \
    "https://${coralogix_host}/api/v1/logs")

  if [[ $http_status_code -eq 200 ]]; then
    break
  fi
done

if [[ $http_status_code -ne 200 ]]; then
  echo "[ERROR][HTTP status code: $http_status_code] The Coralogix API declined the logs!" 1>&2
fi
